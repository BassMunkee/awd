/*
    Tutorial available at:
    http://nccastaff.bournemouth.ac.uk/jmacey/RobTheBloke/www/research/maya/exp_plugin.htm
*/

global proc int MayaAWDExporterUI(string $parent,
                                    string $action,
                                    string $settings,
                                    string $callback )
{
    if ($action == "post") {
        setParent $parent;
        frameLayout -l "General"
            -mw 20 -mh 20
            -bs "etchedIn";
            radioButtonGrp
                -l "Matrix storage"
                -la2 "Optimize for size" "Optimize for accuracy" 
                -nrb 2 -cw3 120 120 120
                -sl 1 radWideMtx;

            radioButtonGrp
                -l "Geometry storage"
                -la2 "Optimize for size" "Optimize for accuracy" 
                -nrb 2 -cw3 120 120 120
                -sl 1 radWideGeom;

            optionMenu -l "Compression" optCompression;
                menuItem -l "Uncompressed (None)";
                menuItem -l "ZLIB/Deflate (Good)";
                //menuItem -l "LZMA (Best)"; Not supported yet
        
        
        setParent $parent;
        frameLayout -l "Scene & geometries"
            -mw 20 -mh 20
            -bs "etchedIn";
            checkBox -label "Include mesh data" -v 1 -align "left" chkIncludeGeom;
            checkBox -label "Include scenegraph" -v 1 -align "left" chkIncludeScene;
            checkBox -label "Flatten untransformed containers" -align "left" chkFlatten;
        
        setParent $parent;
        frameLayout -l "Materials"
            -mw 20 -mh 20
            -bs "etchedIn";
            checkBox -label "Include materials" -v 1 -align "left" chkIncludeMat;
            checkBox -label "Embed textures" -align "left" chkEmbedTex;
        
        setParent $parent;
        frameLayout -l "Skeletons"
            -mw 20 -mh 20
            -bs "etchedIn";
            checkBox -label "Include skeletons" -v 1 -align "left" chkIncludeSkel;
        
        setParent $parent;
        frameLayout -l "Animation"
            -mw 20 -mh 20
            -bs "etchedIn";
            checkBox -label "Include skeletal animation" -v 1 -align "left" chkIncludeSkelAnim;
            checkBox -label "Include UV animation" -align "left" chkIncludeUVAnim;
        
            text -label "Sequence file path" -align "left";
            textField -tx "sequences.txt" tfSequences;
    }
    else if ($action == "query") { 
        int $oi=0;
        string $options[] = {};

        if (`radioButtonGrp -q -sl radWideMtx` == 1)
            $options[$oi] = "wide_mtx=1";
        else
            $options[$oi] = "wide_mtx=0";

        $oi++;
        if (`radioButtonGrp -q -sl radWideGeom` == 1)
            $options[$oi] = "wide_geom=1";
        else
            $options[$oi] = "wide_geom=0";

        $oi++;
        if (`optionMenu -q -sl optCompression` == 1)
            $options[$oi] = "compression=none";
        else if (`optionMenu -q -sl optCompression` == 2)
            $options[$oi] = "compression=deflate";

        if (`checkBox -q -v chkIncludeGeom`) {
            $options[$oi] = "inc_geom=1";
            $oi++;
        }

        if (`checkBox -q -v chkIncludeScene`) {
            $options[$oi] = "inc_scene=1";
            $oi++;
        }

        if (`checkBox -q -v chkFlatten`) {
            $options[$oi] = "flatten=1";
            $oi++;
        }

        if (`checkBox -q -v chkIncludeMat`) {
            $options[$oi] = "inc_materials=1";
            $oi++;
        }

        if (`checkBox -q -v chkEmbedTex`) {
            $options[$oi] = "embed_textures=1";
            $oi++;
        }

        if (`checkBox -q -v chkIncludeSkel`) {
            $options[$oi] = "inc_skeletons=1";
            $oi++;
        }

        if (`checkBox -q -v chkIncludeUVAnim`) {
            $options[$oi] = "inc_uvanim=1";
            $oi++;
        }

        if (`checkBox -q -v chkIncludeSkelAnim`) {
            $options[$oi] = "inc_skelanim=1";
            $oi++;
        }

        $oi++;
        $options[$oi] = "seqsrc="+`textField -q -tx tfSequences`;


        // Join option string (equivalent of '&'.join(options) in Python)
        $option_str = "";
        for ($i=0;$i<size($options);$i++) {
            if ($i==0)
                $option_str += $options[$i];
            else
                $option_str += "&"+$options[$i];
        }

        // Callback
        eval( $callback + " \"" + $option_str + "\"");
    }

    return 1;
}
